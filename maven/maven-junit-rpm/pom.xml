<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.mahu.proto.junitrpm</groupId>
	<artifactId>junit-rpm</artifactId>
	<packaging>jar</packaging>
	<version>0.1.0</version>

	<name>junit-rpm</name>

	<dependencies>
		<!-- Jetty and it's dependencies are copied by one of the mappings -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>9.4.41.v20210516</version>
		</dependency>	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<!-- used 2.0.1, but that didn't include the scriptFile -->
				<version>2.1-alpha-3</version>
				<executions>
					<execution>
						<goals>
							<goal>rpm</goal>
						</goals>
					</execution>
				</executions>
				<!-- Description of the Mojo parameters: http://mojo.codehaus.org/rpm-maven-plugin/rpm-mojo.html -->
				<configuration>
					<copyright>2014, The Company</copyright>
					<!-- The package group for the package -->
					<group>Pikes</group>
					<!-- name rpm: <name>-<maven project.version>-<release>.noarch.rpm -->
					<name>${app.name}</name>
					<release>${build.number}</release>
					<description>Maven test project: RPM Package.</description>
					<!-- Target architecture of the RPM -->
					<!-- <needarch>noarch</needarch> -->
					<!-- The default user:group during yum install is root:root. This feels 
						like a major security risk. -->
					<!-- I have not checked what syntax is for user:group, but maven-rpmtest 
						is ok -->
					<!-- The default user name for files when installed. Only applicable 
						to a Mapping if filemode, username, AND groupname are NOT populated. -->
					<!-- NOTE: The user:group has to be created in the pre-install step 
						!!! -->
					<defaultUsername>${app.name}</defaultUsername>
					<!-- The default group name for files when installed. Only applicable 
						to a Mapping if filemode, username, AND groupname are NOT populated -->
					<defaultGroupname>${app.name}</defaultGroupname>
					<!-- mapping parameters are described here: http://mojo.codehaus.org/rpm-maven-plugin/map-params.html -->
					<mappings>
						<!-- This mapping ensure that also ${app.home} has the proper user:group 
							properties -->
						<mapping>
							<directory>${app.home}</directory>
						</mapping>
						<mapping>
							<directory>${app.home}/lib/</directory>
							<!-- Very compact way of declaring that we want all dependencies – 
								the dependency tag – and our primary build artifact – the artifact tag – 
								to be deployed to the lib directory of our application. -->
							<dependency />
							<artifact />
						</mapping>
						<mapping>
							<directory>${app.home}/logs</directory>
						</mapping>
						<mapping>
							<directory>${app.home}</directory>
							<filemode>755</filemode>
							<sources>
								<source>
									<location>src/main/scripts/junittest.sh</location>
									<destination>junittest.sh</destination>
								</source>
							</sources>
						</mapping>						
					</mappings>
					<!-- scripts to be executed in different phases of RPM life cycle -->
					<preinstallScriptlet>
						<scriptFile>src/main/scripts/preinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preinstallScriptlet>
					<postinstallScriptlet>
						<scriptFile>src/main/scripts/postinstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postinstallScriptlet>
					<preremoveScriptlet>
						<scriptFile>src/main/scripts/preuninstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</preremoveScriptlet>
					<postremoveScriptlet>
						<scriptFile>src/main/scripts/postuninstall.sh</scriptFile>
						<fileEncoding>utf-8</fileEncoding>
					</postremoveScriptlet>
					<!-- The list of requirements for this package. -->
					<requires>
						<require>/bin/sh</require>
						<require>/usr/sbin/groupadd</require>
						<require>/usr/sbin/useradd</require>
						<require>/usr/sbin/groupdel</require>
						<require>/usr/sbin/userdel</require>
						<require>/sbin/service</require>
						<require>/sbin/chkconfig</require>
						<require>jre &gt;= 1.5</require>
					</requires>
					<!-- a change log file -->
					<!-- changelogFile>src/changes.txt</changelogFile> -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<properties>
		<!-- properties are "applied" to the pom.xml but not a included scriptFile -->
		<app.name>${project.artifactId}</app.name>
		<!-- build number can be set by called, e.g. -Dbuild.number=..... -->
		<build.number>1</build.number>
		<app.home>/opt/${app.name}</app.home>
	</properties>
</project>
